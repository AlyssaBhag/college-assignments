{"version":3,"file":"main.js","mappings":"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","sources":["webpack://my-webpack-project/Navigo/webpack/universalModuleDefinition","webpack://my-webpack-project/Navigo/src/constants.ts","webpack://my-webpack-project/Navigo/src/utils.ts","webpack://my-webpack-project/Navigo/src/Q.ts","webpack://my-webpack-project/Navigo/src/middlewares/setLocationPath.ts","webpack://my-webpack-project/Navigo/src/middlewares/matchPathToRegisteredRoutes.ts","webpack://my-webpack-project/Navigo/src/middlewares/checkForDeprecationMethods.ts","webpack://my-webpack-project/Navigo/src/middlewares/checkForForceOp.ts","webpack://my-webpack-project/Navigo/src/middlewares/updateBrowserURL.ts","webpack://my-webpack-project/Navigo/src/middlewares/checkForLeaveHook.ts","webpack://my-webpack-project/Navigo/src/middlewares/updateState.ts","webpack://my-webpack-project/Navigo/src/lifecycles.ts","webpack://my-webpack-project/Navigo/src/middlewares/checkForAlreadyHook.ts","webpack://my-webpack-project/Navigo/src/middlewares/checkForBeforeHook.ts","webpack://my-webpack-project/Navigo/src/middlewares/callHandler.ts","webpack://my-webpack-project/Navigo/src/middlewares/checkForAfterHook.ts","webpack://my-webpack-project/Navigo/src/middlewares/checkForNotFoundHandler.ts","webpack://my-webpack-project/Navigo/src/middlewares/errorOut.ts","webpack://my-webpack-project/Navigo/src/middlewares/flushCurrent.ts","webpack://my-webpack-project/Navigo/src/middlewares/processMatches.ts","webpack://my-webpack-project/Navigo/src/middlewares/waitingList.ts","webpack://my-webpack-project/Navigo/src/index.ts","webpack://my-webpack-project/Navigo/webpack/bootstrap","webpack://my-webpack-project/Navigo/webpack/startup","webpack://my-webpack-project/Navigo/webpack/runtime/define property getters","webpack://my-webpack-project/Navigo/webpack/runtime/hasOwnProperty shorthand","webpack://my-webpack-project/webpack/bootstrap","webpack://my-webpack-project/./src/client/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Navigo\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Navigo\"] = factory();\n\telse\n\t\troot[\"Navigo\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn ","export const PARAMETER_REGEXP = /([:*])(\\w+)/g;\nexport const REPLACE_VARIABLE_REGEXP = \"([^/]+)\";\nexport const WILDCARD_REGEXP = /\\*/g;\nexport const REPLACE_WILDCARD = \"?(?:.*)\";\nexport const NOT_SURE_REGEXP = /\\/\\?/g;\nexport const REPLACE_NOT_SURE = \"/?([^/]+|)\";\nexport const START_BY_SLASH_REGEXP = \"(?:/^|^)\";\nexport const MATCH_REGEXP_FLAGS = \"\";\n","import {\n  RouteHooksStorage,\n  Match,\n  Route,\n  NavigateOptions,\n  ResolveOptions,\n  QContext,\n  ResolveStrategy,\n} from \"../index\";\n\nimport {\n  PARAMETER_REGEXP,\n  WILDCARD_REGEXP,\n  REPLACE_VARIABLE_REGEXP,\n  REPLACE_WILDCARD,\n  START_BY_SLASH_REGEXP,\n  MATCH_REGEXP_FLAGS,\n  REPLACE_NOT_SURE,\n  NOT_SURE_REGEXP,\n} from \"./constants\";\n\nexport function getCurrentEnvURL(fallback = \"/\"): string {\n  if (windowAvailable()) {\n    return location.pathname + location.search + location.hash;\n  }\n  return fallback;\n}\nexport function clean(s: string) {\n  return s.replace(/\\/+$/, \"\").replace(/^\\/+/, \"\");\n}\nexport function isString(s: any): boolean {\n  return typeof s === \"string\";\n}\nexport function isFunction(s: any): boolean {\n  return typeof s === \"function\";\n}\nexport function extractHashFromURL(url: string) {\n  if (url && url.indexOf(\"#\") >= 0) {\n    return url.split(\"#\").pop() || \"\";\n  }\n  return \"\";\n}\nexport function regExpResultToParams(match, names: string[]) {\n  if (names.length === 0) return null;\n  if (!match) return null;\n  return match.slice(1, match.length).reduce((params, value, index) => {\n    if (params === null) params = {};\n    params[names[index]] = decodeURIComponent(value);\n    return params;\n  }, null);\n}\nexport function extractGETParameters(url: string) {\n  const tmp = clean(url).split(/\\?(.*)?$/);\n  return [clean(tmp[0]), tmp.slice(1).join(\"\")];\n}\nexport function parseQuery(queryString: string): Object {\n  var query = {};\n  var pairs = queryString.split(\"&\");\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i].split(\"=\");\n    if (pair[0] !== \"\") {\n      let key = decodeURIComponent(pair[0]);\n      if (!query[key]) {\n        query[key] = decodeURIComponent(pair[1] || \"\");\n      } else {\n        if (!Array.isArray(query[key])) query[key] = [query[key]];\n        query[key].push(decodeURIComponent(pair[1] || \"\"));\n      }\n    }\n  }\n  return query;\n}\nexport function matchRoute(context: QContext, route: Route): false | Match {\n  const [current, GETParams] = extractGETParameters(\n    clean(context.currentLocationPath)\n  );\n  const params = GETParams === \"\" ? null : parseQuery(GETParams);\n  const paramNames = [];\n  let pattern;\n  if (isString(route.path)) {\n    pattern =\n      START_BY_SLASH_REGEXP +\n      clean(route.path as string)\n        .replace(PARAMETER_REGEXP, function (full, dots, name) {\n          paramNames.push(name);\n          return REPLACE_VARIABLE_REGEXP;\n        })\n        .replace(WILDCARD_REGEXP, REPLACE_WILDCARD)\n        .replace(NOT_SURE_REGEXP, REPLACE_NOT_SURE) +\n      \"$\";\n    if (clean(route.path as string) === \"\") {\n      if (clean(current) === \"\") {\n        return {\n          url: current,\n          queryString: GETParams,\n          hashString: extractHashFromURL(context.to),\n          route: route,\n          data: null,\n          params,\n        };\n      }\n    }\n  } else {\n    pattern = route.path;\n  }\n  const regexp = new RegExp(pattern, MATCH_REGEXP_FLAGS);\n  const match = current.match(regexp);\n\n  if (match) {\n    const data = isString(route.path)\n      ? regExpResultToParams(match, paramNames)\n      : match.groups\n      ? match.groups\n      : match.slice(1);\n    return {\n      url: clean(current.replace(new RegExp(`^${context.instance.root}`), \"\")),\n      queryString: GETParams,\n      hashString: extractHashFromURL(context.to),\n      route: route,\n      data,\n      params,\n    };\n  }\n  return false;\n}\nexport function pushStateAvailable(): boolean {\n  return !!(\n    typeof window !== \"undefined\" &&\n    window.history &&\n    window.history.pushState\n  );\n}\nexport function undefinedOrTrue(obj, key: string): boolean {\n  return typeof obj[key] === \"undefined\" || obj[key] === true;\n}\nexport function parseNavigateOptions(source?: string): NavigateOptions {\n  if (!source) return {};\n  const pairs = source.split(\",\");\n  const options: NavigateOptions = {};\n  let resolveOptions: ResolveOptions;\n\n  pairs.forEach((str) => {\n    const temp = str.split(\":\").map((v) => v.replace(/(^ +| +$)/g, \"\"));\n    switch (temp[0]) {\n      case \"historyAPIMethod\":\n        options.historyAPIMethod = temp[1];\n        break;\n      case \"resolveOptionsStrategy\":\n        if (!resolveOptions) resolveOptions = {};\n        resolveOptions.strategy = temp[1] as ResolveStrategy;\n        break;\n      case \"resolveOptionsHash\":\n        if (!resolveOptions) resolveOptions = {};\n        resolveOptions.hash = temp[1] === \"true\";\n        break;\n      case \"updateBrowserURL\":\n      case \"callHandler\":\n      case \"updateState\":\n      case \"force\":\n        options[temp[0]] = temp[1] === \"true\";\n        break;\n    }\n  });\n  if (resolveOptions) {\n    options.resolveOptions = resolveOptions;\n  }\n  return options;\n}\nexport function windowAvailable() {\n  return typeof window !== \"undefined\";\n}\nexport function accumulateHooks(\n  hooks = [],\n  result: RouteHooksStorage = {}\n): RouteHooksStorage {\n  hooks\n    .filter((h) => h)\n    .forEach((h) => {\n      [\"before\", \"after\", \"already\", \"leave\"].forEach((type) => {\n        if (h[type]) {\n          if (!result[type]) result[type] = [];\n          result[type].push(h[type]);\n        }\n      });\n    });\n  return result as RouteHooksStorage;\n}\n","type QChild = {\n  type: \"child\";\n  funcs: Array<Function | Array<any> | QChild>;\n};\n\nexport default function Q(\n  funcs: Array<Function | Array<any> | QChild>,\n  c?: any,\n  done?: Function\n) {\n  const context = c || {};\n  let idx = 0;\n\n  (function next() {\n    if (!funcs[idx]) {\n      if (done) {\n        done(context);\n      }\n      return;\n    }\n    if (Array.isArray(funcs[idx])) {\n      funcs.splice(\n        idx,\n        1,\n        ...(funcs[idx][0](context) ? funcs[idx][1] : funcs[idx][2])\n      );\n      next();\n    } else {\n      // console.log(funcs[idx].name + \" / \" + JSON.stringify(context));\n      // console.log(funcs[idx].name);\n      (funcs[idx] as Function)(context, (moveForward) => {\n        if (typeof moveForward === \"undefined\" || moveForward === true) {\n          idx += 1;\n          next();\n        } else if (done) {\n          done(context);\n        }\n      });\n    }\n  })();\n}\n\nQ.if = function (condition: Function, one, two) {\n  if (!Array.isArray(one)) one = [one];\n  if (!Array.isArray(two)) two = [two];\n  return [condition, one, two];\n};\n","import { QContext } from \"../../index\";\nimport { getCurrentEnvURL } from \"../utils\";\n\nexport default function setLocationPath(context: QContext, done) {\n  if (typeof context.currentLocationPath === \"undefined\") {\n    context.currentLocationPath = context.to = getCurrentEnvURL(\n      context.instance.root\n    );\n  }\n  context.currentLocationPath = context.instance._checkForAHash(\n    context.currentLocationPath\n  );\n  done();\n}\n","import { matchRoute } from \"../utils\";\nimport { QContext, Match } from \"../../index\";\n\nexport default function matchPathToRegisteredRoutes(context: QContext, done) {\n  for (let i = 0; i < context.instance.routes.length; i++) {\n    const route = context.instance.routes[i];\n    const match: false | Match = matchRoute(context, route);\n    if (match) {\n      if (!context.matches) context.matches = [];\n      context.matches.push(match);\n      if (context.resolveOptions.strategy === \"ONE\") {\n        done();\n        return;\n      }\n    }\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\n\nexport default function checkForDeprecationMethods(context: QContext, done) {\n  if (context.navigateOptions) {\n    if (typeof context.navigateOptions[\"shouldResolve\"] !== \"undefined\") {\n      console.warn(\n        `\"shouldResolve\" is deprecated. Please check the documentation.`\n      );\n    }\n    if (typeof context.navigateOptions[\"silent\"] !== \"undefined\") {\n      console.warn(`\"silent\" is deprecated. Please check the documentation.`);\n    }\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\n\nexport default function checkForForceOp(context: QContext, done) {\n  if (context.navigateOptions.force === true) {\n    context.instance._setCurrent([\n      context.instance._pathToMatchObject(context.to),\n    ]);\n    done(false);\n  } else {\n    done();\n  }\n}\n","import { undefinedOrTrue, pushStateAvailable, windowAvailable } from \"../utils\";\nimport { QContext } from \"../../index\";\n\nconst isWindowAvailable = windowAvailable();\nconst isPushStateAvailable = pushStateAvailable();\n\nexport default function updateBrowserURL(context: QContext, done) {\n  if (undefinedOrTrue(context.navigateOptions, \"updateBrowserURL\")) {\n    const value = `/${context.to}`.replace(/\\/\\//g, \"/\"); // making sure that we don't have two slashes\n    const isItUsingHash =\n      isWindowAvailable &&\n      context.resolveOptions &&\n      context.resolveOptions.hash === true;\n    if (isPushStateAvailable) {\n      history[context.navigateOptions.historyAPIMethod || \"pushState\"](\n        context.navigateOptions.stateObj || {},\n        context.navigateOptions.title || \"\",\n        isItUsingHash ? `#${value}` : value\n      );\n      // This is to solve a nasty bug where the page doesn't scroll to the anchor.\n      // We set a microtask to update the hash only.\n      if (location && location.hash) {\n        context.instance.__freezeListening = true;\n        setTimeout(() => {\n          if (!isItUsingHash) {\n            let tmp = location.hash;\n            location.hash = \"\";\n            location.hash = tmp;\n          }\n          context.instance.__freezeListening = false;\n        }, 1);\n      }\n    } else if (isWindowAvailable) {\n      window.location.href = context.to;\n    }\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\nimport Q from \"../Q\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function checkForLeaveHook(context: QContext, done) {\n  const instance = context.instance;\n  if (!instance.lastResolved()) {\n    done();\n    return;\n  }\n  Q(\n    instance.lastResolved().map((oldMatch) => {\n      return (_, leaveLoopDone) => {\n        // no leave hook\n        if (!oldMatch.route.hooks || !oldMatch.route.hooks.leave) {\n          leaveLoopDone();\n          return;\n        }\n        let runHook = false;\n        const newLocationVSOldMatch = context.instance.matchLocation(\n          oldMatch.route.path,\n          context.currentLocationPath,\n          false\n        );\n        if (oldMatch.route.path !== \"*\") {\n          runHook = !newLocationVSOldMatch;\n        } else {\n          const someOfTheLastOnesMatch = context.matches\n            ? context.matches.find((match) => {\n                return oldMatch.route.path === match.route.path;\n              })\n            : false;\n          runHook = !someOfTheLastOnesMatch;\n        }\n        if (undefinedOrTrue(context.navigateOptions, \"callHooks\") && runHook) {\n          Q(\n            oldMatch.route.hooks.leave\n              .map((f) => {\n                // just so we match the Q interface\n                return (_, d) =>\n                  f(\n                    (shouldStop) => {\n                      if (shouldStop === false) {\n                        context.instance.__markAsClean(context);\n                      } else {\n                        d();\n                      }\n                    },\n                    context.matches && context.matches.length > 0\n                      ? context.matches.length === 1\n                        ? context.matches[0]\n                        : context.matches\n                      : undefined\n                  );\n              })\n              .concat([() => leaveLoopDone()])\n          );\n          return;\n        } else {\n          leaveLoopDone();\n        }\n      };\n    }),\n    {},\n    () => done()\n  );\n}\n","import { QContext } from \"../../index\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function updateState(context: QContext, done) {\n  if (undefinedOrTrue(context.navigateOptions, \"updateState\")) {\n    context.instance._setCurrent(context.matches);\n  }\n  done();\n}\n","import { QContext } from \"../index\";\nimport Q from \"./Q\";\nimport checkForLeaveHook from \"./middlewares/checkForLeaveHook\";\nimport checkForBeforeHook from \"./middlewares/checkForBeforeHook\";\nimport callHandler from \"./middlewares/callHandler\";\nimport checkForAfterHook from \"./middlewares/checkForAfterHook\";\nimport checkForAlreadyHook from \"./middlewares/checkForAlreadyHook\";\nimport checkForNotFoundHandler from \"./middlewares/checkForNotFoundHandler\";\nimport errorOut from \"./middlewares/errorOut\";\nimport flushCurrent from \"./middlewares/flushCurrent\";\nimport updateState from \"./middlewares/updateState\";\n\nexport const foundLifecycle = [\n  checkForAlreadyHook,\n  checkForBeforeHook,\n  callHandler,\n  checkForAfterHook,\n];\n\nexport const notFoundLifeCycle = [\n  checkForLeaveHook,\n  checkForNotFoundHandler,\n  Q.if(\n    ({ notFoundHandled }: QContext) => notFoundHandled,\n    foundLifecycle.concat([updateState]),\n    [errorOut, flushCurrent]\n  ),\n];\n","import { QContext } from \"../../index\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function checkForAlreadyHook(context: QContext, done) {\n  const current = context.instance.lastResolved();\n  if (\n    current &&\n    current[0] &&\n    current[0].route === context.match.route &&\n    current[0].url === context.match.url &&\n    current[0].queryString === context.match.queryString\n  ) {\n    current.forEach((c) => {\n      if (c.route.hooks && c.route.hooks.already) {\n        if (undefinedOrTrue(context.navigateOptions, \"callHooks\")) {\n          c.route.hooks.already.forEach((f) => f(context.match));\n        }\n      }\n    });\n    done(false);\n    return;\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\nimport Q from \"../Q\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function checkForBeforeHook(context: QContext, done) {\n  if (\n    context.match.route.hooks &&\n    context.match.route.hooks.before &&\n    undefinedOrTrue(context.navigateOptions, \"callHooks\")\n  ) {\n    Q(\n      context.match.route.hooks.before\n        .map((f) => {\n          // just so we match the Q interface\n          return function beforeHookInternal(_, d) {\n            return f((shouldStop) => {\n              if (shouldStop === false) {\n                context.instance.__markAsClean(context);\n              } else {\n                d();\n              }\n            }, context.match);\n          };\n        })\n        .concat([() => done()])\n    );\n  } else {\n    done();\n  }\n}\n","import { QContext } from \"../../index\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function callHandler(context: QContext, done) {\n  if (undefinedOrTrue(context.navigateOptions, \"callHandler\")) {\n    context.match.route.handler(context.match);\n  }\n  context.instance.updatePageLinks();\n  done();\n}\n","import { QContext } from \"../../index\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function checkForAfterHook(context: QContext, done) {\n  if (\n    context.match.route.hooks &&\n    context.match.route.hooks.after &&\n    undefinedOrTrue(context.navigateOptions, \"callHooks\")\n  ) {\n    context.match.route.hooks.after.forEach((f) => f(context.match));\n  }\n  done();\n}\n","import { QContext, Match } from \"../../index\";\nimport {\n  parseQuery,\n  extractGETParameters,\n  clean,\n  extractHashFromURL,\n} from \"../utils\";\n\nexport default function checkForNotFoundHandler(context: QContext, done) {\n  const notFoundRoute = context.instance._notFoundRoute;\n  if (notFoundRoute) {\n    context.notFoundHandled = true;\n    const [url, queryString] = extractGETParameters(\n      context.currentLocationPath\n    );\n    const hashString = extractHashFromURL(context.to);\n    notFoundRoute.path = clean(url);\n    const notFoundMatch: Match = {\n      url: notFoundRoute.path,\n      queryString,\n      hashString,\n      data: null,\n      route: notFoundRoute,\n      params: queryString !== \"\" ? parseQuery(queryString) : null,\n    };\n    context.matches = [notFoundMatch];\n    context.match = notFoundMatch;\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\n\nexport default function errorOut(context: QContext, done) {\n  if (\n    !context.resolveOptions ||\n    context.resolveOptions.noMatchWarning === false ||\n    typeof context.resolveOptions.noMatchWarning === \"undefined\"\n  )\n    console.warn(\n      `Navigo: \"${context.currentLocationPath}\" didn't match any of the registered routes.`\n    );\n  done();\n}\n","import { QContext } from \"../../index\";\n\nexport default function flushCurrent(context: QContext, done) {\n  context.instance._setCurrent(null);\n  done();\n}\n","import { QContext } from \"../../index\";\nimport Q from \"../Q\";\nimport { foundLifecycle } from \"../lifecycles\";\nimport updateState from \"./updateState\";\nimport checkForLeaveHook from \"./checkForLeaveHook\";\n\nexport default function processMatches(context: QContext, done) {\n  let idx = 0;\n  function nextMatch() {\n    if (idx === context.matches.length) {\n      updateState(context, done);\n      return;\n    }\n    Q(\n      foundLifecycle,\n      { ...context, match: context.matches[idx] },\n      function end() {\n        idx += 1;\n        nextMatch();\n      }\n    );\n  }\n  checkForLeaveHook(context, nextMatch);\n}\n","import { QContext } from \"../../index\";\n\nexport default function waitingList(context: QContext) {\n  context.instance.__markAsClean(context);\n}\n","import {\n  Match,\n  Route,\n  RouteHooks,\n  QContext,\n  NavigateOptions,\n  ResolveOptions,\n  GenerateOptions,\n  Handler,\n  RouterOptions,\n} from \"../index\";\nimport NavigoRouter from \"../index\";\nimport {\n  pushStateAvailable,\n  matchRoute,\n  parseQuery,\n  extractGETParameters,\n  isFunction,\n  isString,\n  clean,\n  parseNavigateOptions,\n  windowAvailable,\n  getCurrentEnvURL,\n  accumulateHooks,\n  extractHashFromURL,\n} from \"./utils\";\nimport Q from \"./Q\";\nimport setLocationPath from \"./middlewares/setLocationPath\";\nimport matchPathToRegisteredRoutes from \"./middlewares/matchPathToRegisteredRoutes\";\nimport checkForDeprecationMethods from \"./middlewares/checkForDeprecationMethods\";\nimport checkForForceOp from \"./middlewares/checkForForceOp\";\nimport updateBrowserURL from \"./middlewares/updateBrowserURL\";\nimport processMatches from \"./middlewares/processMatches\";\nimport waitingList from \"./middlewares/waitingList\";\n\nimport { notFoundLifeCycle } from \"./lifecycles\";\n\nconst DEFAULT_LINK_SELECTOR = \"[data-navigo]\";\n\nexport default function Navigo(appRoute?: string, options?: RouterOptions) {\n  let DEFAULT_RESOLVE_OPTIONS: RouterOptions = options || {\n    strategy: \"ONE\",\n    hash: false,\n    noMatchWarning: false,\n    linksSelector: DEFAULT_LINK_SELECTOR,\n  };\n  let self: NavigoRouter = this;\n  let root = \"/\";\n  let current: Match[] = null;\n  let routes: Route[] = [];\n  let destroyed = false;\n  let genericHooks: RouteHooks;\n\n  const isPushStateAvailable = pushStateAvailable();\n  const isWindowAvailable = windowAvailable();\n\n  if (!appRoute) {\n    console.warn(\n      'Navigo requires a root path in its constructor. If not provided will use \"/\" as default.'\n    );\n  } else {\n    root = clean(appRoute);\n  }\n\n  function _checkForAHash(url: string): string {\n    if (url.indexOf(\"#\") >= 0) {\n      if (DEFAULT_RESOLVE_OPTIONS.hash === true) {\n        url = url.split(\"#\")[1] || \"/\";\n      } else {\n        url = url.split(\"#\")[0];\n      }\n    }\n    return url;\n  }\n  function composePathWithRoot(path: string) {\n    return clean(`${root}/${clean(path)}`);\n  }\n  function createRoute(\n    path: string | RegExp,\n    handler: Handler,\n    hooks: RouteHooks[],\n    name?: string\n  ): Route {\n    path = isString(path) ? composePathWithRoot(path as string) : path;\n    return {\n      name: name || clean(String(path)),\n      path,\n      handler,\n      hooks: accumulateHooks(hooks),\n    };\n  }\n\n  // public APIs\n  function on(\n    path: string | Function | Object | RegExp,\n    handler?: Handler,\n    hooks?: RouteHooks\n  ) {\n    if (typeof path === \"object\" && !(path instanceof RegExp)) {\n      Object.keys(path).forEach((p) => {\n        if (typeof path[p] === \"function\") {\n          this.on(p, path[p]);\n        } else {\n          const { uses: handler, as: name, hooks } = path[p];\n          routes.push(createRoute(p, handler, [genericHooks, hooks], name));\n        }\n      });\n      return this;\n    } else if (typeof path === \"function\") {\n      hooks = handler as RouteHooks;\n      handler = path as Handler;\n      path = root;\n    }\n    routes.push(\n      createRoute(path as string | RegExp, handler, [genericHooks, hooks])\n    );\n    return this;\n  }\n  function resolve(to?: string, options?: ResolveOptions): false | Match[] {\n    if (self.__dirty) {\n      self.__waiting.push(() => self.resolve(to, options));\n      return;\n    } else {\n      self.__dirty = true;\n    }\n    to = to ? `${clean(root)}/${clean(to)}` : undefined;\n    // console.log(\"-- resolve --> \" + to, self.__dirty);\n    const context: QContext = {\n      instance: self,\n      to,\n      currentLocationPath: to,\n      navigateOptions: {},\n      resolveOptions: { ...DEFAULT_RESOLVE_OPTIONS, ...options },\n    };\n    Q(\n      [\n        setLocationPath,\n        matchPathToRegisteredRoutes,\n        Q.if(\n          ({ matches }: QContext) => matches && matches.length > 0,\n          processMatches,\n          notFoundLifeCycle\n        ),\n      ],\n      context,\n      waitingList\n    );\n\n    return context.matches ? context.matches : false;\n  }\n  function navigate(to: string, navigateOptions?: NavigateOptions): void {\n    // console.log(\"-- navigate --> \" + to, self.__dirty);\n    if (self.__dirty) {\n      self.__waiting.push(() => self.navigate(to, navigateOptions));\n      return;\n    } else {\n      self.__dirty = true;\n    }\n    to = `${clean(root)}/${clean(to)}`;\n    const context: QContext = {\n      instance: self,\n      to,\n      navigateOptions: navigateOptions || {},\n      resolveOptions:\n        navigateOptions && navigateOptions.resolveOptions\n          ? navigateOptions.resolveOptions\n          : DEFAULT_RESOLVE_OPTIONS,\n      currentLocationPath: _checkForAHash(to),\n    };\n    Q(\n      [\n        checkForDeprecationMethods,\n        checkForForceOp,\n        matchPathToRegisteredRoutes,\n        Q.if(\n          ({ matches }: QContext) => matches && matches.length > 0,\n          processMatches,\n          notFoundLifeCycle\n        ),\n        updateBrowserURL,\n        waitingList,\n      ],\n      context,\n      waitingList\n    );\n  }\n  function navigateByName(\n    name: string,\n    data?: Object,\n    options?: NavigateOptions\n  ): boolean {\n    const url = generate(name, data);\n    if (url !== null) {\n      navigate(url.replace(new RegExp(`^\\/?${root}`), \"\"), options);\n      return true;\n    }\n    return false;\n  }\n  function off(what: string | RegExp | Function) {\n    this.routes = routes = routes.filter((r) => {\n      if (isString(what)) {\n        return clean(r.path as string) !== clean(what as string);\n      } else if (isFunction(what)) {\n        return what !== r.handler;\n      }\n      return String(r.path) !== String(what);\n    });\n    return this;\n  }\n  function listen() {\n    if (isPushStateAvailable) {\n      this.__popstateListener = () => {\n        if (!self.__freezeListening) {\n          resolve();\n        }\n      };\n      window.addEventListener(\"popstate\", this.__popstateListener);\n    }\n  }\n  function destroy() {\n    this.routes = routes = [];\n    if (isPushStateAvailable) {\n      window.removeEventListener(\"popstate\", this.__popstateListener);\n    }\n    this.destroyed = destroyed = true;\n  }\n  function notFound(handler, hooks?: RouteHooks) {\n    self._notFoundRoute = createRoute(\n      \"*\",\n      handler,\n      [genericHooks, hooks],\n      \"__NOT_FOUND__\"\n    );\n    return this;\n  }\n  function updatePageLinks() {\n    if (!isWindowAvailable) return;\n    findLinks().forEach((link) => {\n      if (\n        \"false\" === link.getAttribute(\"data-navigo\") ||\n        \"_blank\" === link.getAttribute(\"target\")\n      ) {\n        if (link.hasListenerAttached) {\n          link.removeEventListener(\"click\", link.navigoHandler);\n        }\n        return;\n      }\n      if (!link.hasListenerAttached) {\n        link.hasListenerAttached = true;\n        link.navigoHandler = function (e) {\n          if (\n            (e.ctrlKey || e.metaKey) &&\n            e.target.tagName.toLowerCase() === \"a\"\n          ) {\n            return false;\n          }\n          let location = link.getAttribute(\"href\");\n          if (typeof location === \"undefined\" || location === null) {\n            return false;\n          }\n          // handling absolute paths\n          if (location.match(/^(http|https)/) && typeof URL !== \"undefined\") {\n            try {\n              const u = new URL(location);\n              location = u.pathname + u.search;\n            } catch (err) {}\n          }\n          const options = parseNavigateOptions(\n            link.getAttribute(\"data-navigo-options\")\n          );\n\n          if (!destroyed) {\n            e.preventDefault();\n            e.stopPropagation();\n            self.navigate(clean(location), options);\n          }\n        };\n        link.addEventListener(\"click\", link.navigoHandler);\n      }\n    });\n    return self;\n  }\n  function findLinks() {\n    if (isWindowAvailable) {\n      return [].slice.call(\n        document.querySelectorAll(\n          DEFAULT_RESOLVE_OPTIONS.linksSelector || DEFAULT_LINK_SELECTOR\n        )\n      );\n    }\n    return [];\n  }\n  function link(path: string) {\n    return `/${root}/${clean(path)}`;\n  }\n  function setGenericHooks(hooks: RouteHooks) {\n    genericHooks = hooks;\n    return this;\n  }\n  function lastResolved(): Match[] | null {\n    return current;\n  }\n  function generate(\n    name: string,\n    data?: Object,\n    options?: GenerateOptions\n  ): string {\n    const route = routes.find((r) => r.name === name);\n    let result = null;\n    if (route) {\n      result = route.path as string;\n      if (data) {\n        for (let key in data) {\n          result = result.replace(\":\" + key, data[key]);\n        }\n      }\n      result = !result.match(/^\\//) ? `/${result}` : result;\n    }\n    if (result && options && !options.includeRoot) {\n      result = result.replace(new RegExp(`^/${root}`), \"\");\n    }\n    return result;\n  }\n  function getLinkPath(link) {\n    return link.getAttribute(\"href\");\n  }\n  function pathToMatchObject(path: string): Match {\n    const [url, queryString] = extractGETParameters(clean(path));\n    const params = queryString === \"\" ? null : parseQuery(queryString);\n    const hashString = extractHashFromURL(path);\n    const route = createRoute(url, () => {}, [genericHooks], url);\n    return {\n      url,\n      queryString,\n      hashString,\n      route,\n      data: null,\n      params: params,\n    };\n  }\n  function getCurrentLocation(): Match {\n    return pathToMatchObject(\n      clean(getCurrentEnvURL(root)).replace(new RegExp(`^${root}`), \"\")\n    );\n  }\n  function directMatchWithRegisteredRoutes(path: string): false | Match[] {\n    const context: QContext = {\n      instance: self,\n      currentLocationPath: path,\n      to: path,\n      navigateOptions: {},\n      resolveOptions: DEFAULT_RESOLVE_OPTIONS,\n    };\n    matchPathToRegisteredRoutes(context, () => {});\n    return context.matches ? context.matches : false;\n  }\n  function directMatchWithLocation(\n    path: string | RegExp,\n    currentLocation?: string,\n    annotatePathWithRoot?: boolean\n  ): false | Match {\n    if (\n      typeof currentLocation !== \"undefined\" &&\n      (typeof annotatePathWithRoot === \"undefined\" || annotatePathWithRoot)\n    ) {\n      currentLocation = composePathWithRoot(currentLocation);\n    }\n    const context: QContext = {\n      instance: self,\n      to: currentLocation,\n      currentLocationPath: currentLocation,\n    };\n    setLocationPath(context, () => {});\n    if (typeof path === \"string\") {\n      path =\n        typeof annotatePathWithRoot === \"undefined\" || annotatePathWithRoot\n          ? composePathWithRoot(path)\n          : path;\n    }\n    const match = matchRoute(context, {\n      name: String(path),\n      path,\n      handler: () => {},\n      hooks: {},\n    });\n    return match ? match : false;\n  }\n  function addHook(\n    type: string,\n    route: Route | string,\n    func: Function\n  ): Function {\n    if (typeof route === \"string\") {\n      route = getRoute(route);\n    }\n    if (route) {\n      if (!route.hooks[type]) route.hooks[type] = [];\n      route.hooks[type].push(func);\n      return () => {\n        (route as Route).hooks[type] = (route as Route).hooks[type].filter(\n          (f) => f !== func\n        );\n      };\n    } else {\n      console.warn(`Route doesn't exists: ${route}`);\n    }\n    return () => {};\n  }\n  function getRoute(nameOrHandler: string | Function): Route | undefined {\n    if (typeof nameOrHandler === \"string\") {\n      return routes.find((r) => r.name === composePathWithRoot(nameOrHandler));\n    }\n    return routes.find((r) => r.handler === nameOrHandler);\n  }\n  function __markAsClean(context: QContext) {\n    context.instance.__dirty = false;\n    if (context.instance.__waiting.length > 0) {\n      context.instance.__waiting.shift()();\n    }\n  }\n\n  this.root = root;\n  this.routes = routes;\n  this.destroyed = destroyed;\n  this.current = current;\n  this.__freezeListening = false;\n  this.__waiting = [];\n  this.__dirty = false;\n  this.__markAsClean = __markAsClean;\n\n  this.on = on;\n  this.off = off;\n  this.resolve = resolve;\n  this.navigate = navigate;\n  this.navigateByName = navigateByName;\n  this.destroy = destroy;\n  this.notFound = notFound;\n  this.updatePageLinks = updatePageLinks;\n  this.link = link;\n  this.hooks = setGenericHooks;\n  this.extractGETParameters = (url) =>\n    extractGETParameters(_checkForAHash(url));\n  this.lastResolved = lastResolved;\n  this.generate = generate;\n  this.getLinkPath = getLinkPath;\n  this.match = directMatchWithRegisteredRoutes;\n  this.matchLocation = directMatchWithLocation;\n  this.getCurrentLocation = getCurrentLocation;\n  this.addBeforeHook = addHook.bind(this, \"before\");\n  this.addAfterHook = addHook.bind(this, \"after\");\n  this.addAlreadyHook = addHook.bind(this, \"already\");\n  this.addLeaveHook = addHook.bind(this, \"leave\");\n  this.getRoute = getRoute;\n  this._pathToMatchObject = pathToMatchObject;\n  this._clean = clean;\n  this._checkForAHash = _checkForAHash;\n  this._setCurrent = (c) => (current = self.current = c);\n\n  listen.call(this);\n  updatePageLinks.call(this);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(407);\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// Import statments/.\nimport Navigo from 'navigo';\n\n// Initialize router\nconst router = new Navigo('/');\n\n// console.log(\"Hello World!\");\n\n// Main pages.\nrouter.on(\"/\", () => {\n    console.log(\"The Index / Home page!\");\n});\n\nrouter.on(\"/search\", () => {\n    console.log(\"The Search page!\");\n});\n\nrouter.on(\"/create\", () => {\n    console.log(\"The Create page!\");\n});\n\n// Other supplementary pages.\nrouter.on(\"/about\", () => {\n    console.log(\"The About page!\");\n});\n\nrouter.on(\"/contact\", () => {\n    console.log(\"The Contact page!\");\n});\n\n// router.on(\"/privacy-policy\", (router) => {\n//     console.log(\"The About page!\");\n// });\n\n// router.on(\"/terms\", (router) => {\n//     console.log(\"The About page!\");\n// });\n\nrouter.resolve();\n"],"names":["self","module","exports","o","r","i","a","t","v","location","pathname","search","hash","s","replace","c","u","indexOf","split","pop","h","n","slice","join","f","e","length","decodeURIComponent","Array","isArray","push","l","currentLocationPath","p","d","path","url","queryString","hashString","to","route","data","params","g","RegExp","m","match","y","reduce","groups","instance","root","window","history","pushState","filter","forEach","splice","apply","concat","_checkForAHash","_","routes","matches","resolveOptions","strategy","k","navigateOptions","shouldResolve","console","warn","silent","O","force","_setCurrent","_pathToMatchObject","if","w","L","b","historyAPIMethod","stateObj","title","__freezeListening","setTimeout","href","A","lastResolved","map","hooks","leave","matchLocation","find","__markAsClean","P","R","already","before","handler","updatePageLinks","after","S","_notFoundRoute","notFoundHandled","noMatchWarning","x","E","H","C","N","linksSelector","this","name","String","U","__dirty","j","__waiting","resolve","q","navigate","F","call","document","querySelectorAll","getAttribute","hasListenerAttached","navigoHandler","ctrlKey","metaKey","target","tagName","toLowerCase","URL","preventDefault","stopPropagation","addEventListener","removeEventListener","I","includeRoot","M","T","z","destroyed","current","shift","on","Object","keys","uses","as","off","navigateByName","destroy","__popstateListener","notFound","link","extractGETParameters","generate","getLinkPath","getCurrentLocation","addBeforeHook","bind","addAfterHook","addAlreadyHook","addLeaveHook","getRoute","_clean","defineProperty","enumerable","get","prototype","hasOwnProperty","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","router","log"],"sourceRoot":""}